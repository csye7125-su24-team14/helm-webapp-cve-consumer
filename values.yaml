# Default values for ..
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 3

appName: "web-cve-consumer"

kafkaNameSpace: "kafka"

# namespace: "csye7125"

dockerconfigjson: =

postgres:
  host: my-postgres-postgresql.postgres.svc.cluster.local
  driver: postgres
  user: postgres
  password: postgres
  name: cve
  port: "5432"

consumerImage:
  repository: anuragnandre/webapp-cve-consumer  
  # repository: anuragnandre/webapp-consumer-saramaa
  # repository: anuragnandre/webapp1000
  pullPolicy: IfNotPresent
  port: 8085
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"


# values.yaml
liquibase:
  host: my-postgres-postgresql.postgres.svc.cluster.local
  port: 5432
  database: cve
  username: postgres
  password: postgres
  driver: org.postgresql.Driver
  changeLogFile: initial_schema.sql
  searchPath: ./migrations

initImage:
  repository: anuragnandre/webapp-cve-liquibase
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v1.2.1"

# values.yaml

kafka:
  # kafkaURL: "my-kafka.kafka.svc.cluster.local"
  kafkaURL: "my-kafka.kafka.svc.cluster.local:9092"
  # kafkaURL: "mykafka-controller-0.mykafka-controller-headless.kafka.svc.cluster.local:9092,mykafka-controller-1.mykafka-controller-headless.kafka.svc.cluster.local:9092,mykafka-controller-2.mykafka-controller-headless.kafka.svc.cluster.local:9092"
  # "my-kafka-controller-0.my-kafka-controller-headless.kafka.svc.cluster.local:9092,my-kafka-controller-1.my-kafka-controller-headless.kafka.svc.cluster.local:9092,my-kafka-controller-2.my-kafka-controller-headless.kafka.svc.cluster.local:9092"
  TOPIC_NAME: "cve"
  groupID: "cve-consumer"
  USERNAME: "kafkausername"
  PASSWORD: "kafkapassword"


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
